" :colorscheme lucius
" LuciusBlackLowContrast

set nocompatible              " be iMproved
filetype off                  " required!
 
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
 
" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'
Bundle 'cespare/vim-golang'
Bundle 'Blackrush/vim-gocode'
Bundle 'majutsushi/tagbar'
Bundle 'The-NERD-tree'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'ervandew/supertab'
Bundle 'rkulla/pydiction'
Bundle 'nvie/vim-flake8'
Bundle 'drmingdrmer/xptemplate'
" Bundle 'Valloric/YouCompleteMe'
 
" ... other plugin
syntax on
filetype plugin indent on     " required!

"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install (update) bundles
" :BundleSearch(!) foo - search (or refresh cache first) for foo
" :BundleClean(!)      - confirm (or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle commands are not allowed.
 
set omnifunc=syntaxcomplete#Complete    
set completeopt=longest,menu
autocmd BufWritePre *.go :Fmt
 
set showcmd
set ruler
" enable backspace
set backspace=indent,eol,start
set nu
set tabstop=4 
set softtabstop=4 
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set pastetoggle=<F9>
"hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=green guibg=darkred guifg=white
hi Folded guibg=black guifg=grey40 ctermfg=grey ctermbg=darkgrey
hi FoldColumn guibg=black guifg=grey20 ctermfg=4 ctermbg=7 
autocmd FileType python setlocal foldmethod=indent
"set foldlevel=2 

" Tagbar Config
nmap <F8> :TagbarToggle<CR>
autocmd VimEnter * nested :call tagbar#autoopen()
let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
    \ }

"vim-nerdtree-tabs Config
nmap <F2> :NERDTreeTabsToggle<CR>
let g:nerdtree_tabs_open_on_console_startup=1

"NERDTreeToggle Config
autocmd VimEnter * NERDTree
wincmd w
autocmd VimEnter * wincmd w
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") &&b:NERDTreeType == "primary") | q | endif

"pydiction Config
let g:pydiction_location ='/Users/zhenglei/.vim/bundle/pydiction/complete-dict' 
let g:pydiction_menu_height = 20

"vim-flake8
autocmd FileType python map <buffer> <F3> :call Flake8()<CR>
autocmd BufWritePost *.py call Flake8()
let g:pyflakes_use_quickfix = 0
let g:flake8_ignore="E501,W293"
let g:flake8_builtins="_,apply"

"XPTtemplate
let g:xptemplate_vars="SParg=" 

syntax enable
set background=dark
colorscheme solarized
